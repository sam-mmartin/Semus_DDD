@model IEnumerable<Entities.Entity.StockProducts>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/Stock/_LayoutStock.cshtml";
}

<main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-md-4">
    <!-- Header -->
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2" id="EstoqueID">@ViewBag.Stock.ID - @ViewBag.Stock.Description</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">
                <a asp-controller="Stock" asp-action="Details" asp-route-id="@ViewBag.Stock.ID" class="btn btn-sm btn-outline-secondary">&laquo; Voltar</a>
                @if (ViewBag.Stock.ID == 1)
                {
                    @Html.ActionLink("Cadastrar Produto", "Create", "Produto", new { TipoProduto = ViewBag.TipoProduto }, new { @class = "btn btn-sm btn-outline-secondary" })
                }
                <button type="button" class="btn btn-sm btn-outline-secondary" data-toggle="modal" data-target="#ModalItensFalta">
                    Itens em Falta
                </button>
            </div>
            <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle">
                <span data-feather="calendar"></span>
                This week
            </button>
        </div>
    </div>

    @if (ViewBag.TipoProduto == 1)
    {
        <h4 class="text-info">Medicamentos</h4>
    }
    else if (ViewBag.TipoProduto == 2)
    {
        <h4 class="text-danger">Suprimentos</h4>
    }

    <!-- section -->
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">
                                @Html.ActionLink("Descrição", "Index", new { estoqueID = ViewBag.Stock.ID, TipoProduto = ViewBag.TipoProduto, sortOrder = ViewBag.DescricaoSortParm, currentFilter = ViewBag.CurrentFilter })
                                @*<i class="fas fa-angle-double-@desc_down_up text-primary"></i>*@
                            </th>
                            <th scope="col">
                                @Html.ActionLink("Categoria", "Index", new { estoqueID = ViewBag.Stock.ID, TipoProduto = ViewBag.TipoProduto, sortOrder = ViewBag.CategoriaSortParm, currentFilter = ViewBag.CurrentFilter })
                                @*<i class="fas fa-angle-double-@categ_down_up text-primary"></i>*@
                            </th>
                            <th scope="col"><i class="fas fa-info-circle"></i></th>
                            @if (ViewBag.Stock.ID == 1)
                            {
                                <th scope="col"><i class="fas fa-trash"></i></th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            //string produtoInfo = item.Produto_ID + "-" +
                            //    item.QuantidadeTotal + "-" +
                            //    item.QuantidadeEntrada + "-" +
                            //    item.DataEntrada + "-" +
                            //    item.QuantidadeSaida + "-" +
                            //    item.DataSaida;

                            //if (item.UserID == null)
                            //{
                            //    produtoInfo += "-Não encontrado";
                            //}
                            //else
                            //{
                            //    produtoInfo += "-" + item.ApplicationUser.UserName;
                            //}

                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.ProductID)</td>
                                <td>@Html.DisplayFor(modelItem => item.Product.Description)</td>
                                <td>@Html.DisplayFor(modelItem => item.Product.Category)</td>
                                <td>
                                    <button name="@*@produtoInfo*@" type="button" class="btn btn-primary detailsPro" data-toggle="modal" data-target="#ModalCenter">
                                        Visualizar Detalhes
                                    </button>
                                </td>
                                @if (item.StockID == 1)
                                {
                                    <td>@Html.ActionLink("Apagar", "Delete", new { id = item.ProductID }, new { @class = "btn btn-danger" })</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
                @*Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, estoqueID = ViewBag.Stock.ID, TipoProduto = ViewBag.TipoProduto, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
            </div>
        </div>
    </div>
</main>